{"version":3,"sources":["../../src/vectorsearch/index.ts"],"sourcesContent":["/**\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Genkit } from 'genkit';\nimport { GenkitPlugin, genkitPlugin } from 'genkit/plugin';\nimport { getDerivedParams } from '../common/index.js';\nimport { PluginOptions } from './types.js';\nimport { vertexAiIndexers, vertexAiRetrievers } from './vector_search/index.js';\nexport { PluginOptions } from '../common/types.js';\nexport {\n  DocumentIndexer,\n  DocumentRetriever,\n  Neighbor,\n  VectorSearchOptions,\n  getBigQueryDocumentIndexer,\n  getBigQueryDocumentRetriever,\n  getFirestoreDocumentIndexer,\n  getFirestoreDocumentRetriever,\n  vertexAiIndexerRef,\n  vertexAiIndexers,\n  vertexAiRetrieverRef,\n  vertexAiRetrievers,\n} from './vector_search/index.js';\n/**\n * Add Google Cloud Vertex AI to Genkit. Includes Gemini and Imagen models and text embedder.\n */\nexport function vertexAIVectorSearch(options?: PluginOptions): GenkitPlugin {\n  return genkitPlugin('vertexAIVectorSearch', async (ai: Genkit) => {\n    const { authClient } = await getDerivedParams(options);\n\n    if (\n      options?.vectorSearchOptions &&\n      options.vectorSearchOptions.length > 0\n    ) {\n      vertexAiIndexers(ai, {\n        pluginOptions: options,\n        authClient,\n        defaultEmbedder: options.embedder,\n      });\n\n      vertexAiRetrievers(ai, {\n        pluginOptions: options,\n        authClient,\n        defaultEmbedder: options.embedder,\n      });\n    }\n  });\n}\n"],"mappings":"AAiBA,SAAuB,oBAAoB;AAC3C,SAAS,wBAAwB;AAEjC,SAAS,kBAAkB,0BAA0B;AACrD,SAAS,iBAAAA,sBAAqB;AAC9B;AAAA,EACE;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,oBAAAC;AAAA,EACA;AAAA,EACA,sBAAAC;AAAA,OACK;AAIA,SAAS,qBAAqB,SAAuC;AAC1E,SAAO,aAAa,wBAAwB,OAAO,OAAe;AAChE,UAAM,EAAE,WAAW,IAAI,MAAM,iBAAiB,OAAO;AAErD,QACE,SAAS,uBACT,QAAQ,oBAAoB,SAAS,GACrC;AACA,uBAAiB,IAAI;AAAA,QACnB,eAAe;AAAA,QACf;AAAA,QACA,iBAAiB,QAAQ;AAAA,MAC3B,CAAC;AAED,yBAAmB,IAAI;AAAA,QACrB,eAAe;AAAA,QACf;AAAA,QACA,iBAAiB,QAAQ;AAAA,MAC3B,CAAC;AAAA,IACH;AAAA,EACF,CAAC;AACH;","names":["PluginOptions","vertexAiIndexers","vertexAiRetrievers"]}